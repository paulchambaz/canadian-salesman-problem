[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cstp"
version = "0.1.0"
authors = [
  { name = "Paul Chambaz", email = "paul.chambaz@example.com" },
  { name = "Philipp Hanussek" },
]
description = "A variation of the traveling salesman problem with a Canadian twist"
readme = "README.md"
requires-python = ">=3.11,<3.12"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/paulchambaz/canadian-salesman-problem"
"Bug Tracker" = "https://github.com/paulchambaz/canadian-salesman-problem/issues"

[tool.ruff]
target-version = "py311"
line-length = 80
exclude = [".git", ".ruff_cache", "__pypackages__", "dist", "build", "venv"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "C90", # mccabe complexity
  "I",   # isort
  "N",   # pep8-naming
  "D",   # pydocstyle
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",  # flake8-comprehensions
  "T10", # flake8-debugger
  "EM",  # flake8-errmsg
  "ICN", # flake8-import-conventions
  "PT",  # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
  "ERA", # eradicate commented-out code
  "PL",  # pylint
  "TRY", # tryceratops
]

[tool.ruff.lint.pydocstyle]
convention = "google" # Use Google-style docstrings

[tool.ruff.lint.mccabe]
max-complexity = 10 # Limit function complexity

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Ignore unused imports in __init__.py files
"test_*.py" = ["D"]      # Ignore docstring requirements in test files

[tool.ruff.lint.isort]
known-first-party = ["cstp"]
